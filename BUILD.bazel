load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

# gazelle:prefix github.com/lvjp/dummy
gazelle(name = "gazelle")

# Add a rule to call gazelle and pull in new go dependencies.
gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

buildifier_test(name = "buildifier")

go_library(
    name = "dummy_lib",
    srcs = ["main.go"],
    importpath = "github.com/lvjp/dummy",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/pkg/service/debug",
        "//internal/pkg/service/string",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_sourcegraph_conc//pool",
        "@org_golang_x_exp//slog",
    ],
)

go_binary(
    name = "dummy",
    embed = [":dummy_lib"],
    visibility = ["//visibility:public"],
    x_defs = {
        "github.com/lvjp/dummy/cmd.version": "{STABLE_GIT_COMMIT}",
    },
)

container_image(
    name = "image",
    base = "@ubuntu_base//image",
    entrypoint = ["/dummy"],
    files = [":dummy"],
)
